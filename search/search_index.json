{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Rocketship Documentation","text":"<p>Welcome to the Rocketship documentation! Rocketship is an open-source testing engine that can verify complex, API-driven scenarios in any cloud environment.</p>"},{"location":"#what-is-rocketship","title":"What is Rocketship?","text":"<p>\ud83d\ude80 Rocketship is an open\u2011source testing engine that can verify complex, API-driven scenarios that are made by your customers\u2014 or your systems. Today's world is filled with event-driven micro-services that can be hard to test. Rocketship brings durable execution backed by Temporal to your testing infra, and offers an extensible plugin system so you can add the APIs and protocols that matter to you.</p>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li>Rocketship CLI - Run the engine locally or connect to a remote address</li> <li>Deploy-Ready Images - Need long-running, highly-scalable tests? Or just want to save test history? Host Rocketship on your own infra</li> <li>Declarative YAML - Define your test scenarios as declarative YAML specs</li> <li>Durable Execution - Need a test step to retry? Or a test to run for 10 hours? No problem!</li> <li>Plugin Ecosystem - Add the APIs and protocols that matter to you</li> </ul>"},{"location":"#quick-links","title":"Quick Links","text":"<ul> <li>Quick Start Guide</li> <li>Command Reference</li> <li>Contributing Guide</li> </ul>"},{"location":"contributing/","title":"Contributing to Rocketship","text":"<p>Thank you for your interest in contributing to Rocketship! We're excited to have you join our community. This document provides guidelines and instructions for contributing to the project.</p>"},{"location":"contributing/#getting-started","title":"Getting Started","text":"<ol> <li>Fork the repository on GitHub</li> <li>Clone your fork locally:</li> </ol> <pre><code>git clone https://github.com/YOUR_USERNAME/rocketship.git\ncd rocketship\n</code></pre> <ol> <li>Set up your development environment:</li> </ol> <pre><code>make dev-setup\n</code></pre>"},{"location":"contributing/#development-workflow","title":"Development Workflow","text":"<ol> <li>Create a new branch for your feature/fix:</li> </ol> <pre><code>git checkout -b feature/your-feature-name\n</code></pre> <ol> <li>Make your changes and ensure tests pass:</li> </ol> <pre><code>make test\nmake lint\n</code></pre> <ol> <li>Build and install your local changes:</li> </ol> <pre><code>make install    # Removes old executable and go installs the local version\n</code></pre> <ol> <li>Test your changes:</li> </ol> <pre><code>rocketship start server --local    # Start required services\n# in another session, run the test\nrocketship run --file &lt;path/to/rocketship.yaml&gt; --engine localhost:7700\n</code></pre> <ol> <li>Test Server for Development:    Inside for-contributors/, you'll find a test server that you can run with:</li> </ol> <pre><code>go run for-contributors/test-server/main.go\n</code></pre> <p>This will help you test your changes with an in-memory store that can preserve resources.</p>"},{"location":"contributing/#creating-plugins","title":"Creating Plugins","text":"<p>Rocketship's plugin system allows you to add support for new APIs and protocols. To create a new plugin:</p> <ol> <li>Add your plugin in <code>internal/plugins/</code></li> <li>Implement the required plugin interface</li> <li>Register your plugin in the plugin registry</li> <li>Add tests for your plugin</li> <li>Document your plugin's usage</li> </ol>"},{"location":"contributing/#documentation","title":"Documentation","text":"<p>If you're updating features or adding new ones, please update the documentation:</p> <ol> <li>Documentation is written in Markdown under <code>docs/src/</code></li> <li>Run the documentation server locally:</li> </ol> <pre><code>make docs-serve\n</code></pre> <ol> <li>View your changes at <code>http://localhost:8000</code></li> </ol>"},{"location":"contributing/#code-style","title":"Code Style","text":"<ul> <li>Follow Go best practices and conventions</li> <li>Use <code>gofmt</code> to format your code</li> <li>Add comments for non-obvious code sections</li> <li>Write meaningful commit messages</li> </ul>"},{"location":"contributing/#development-tips","title":"Development Tips","text":"<ul> <li>Set the <code>ROCKETSHIP_LOG</code> env var to <code>DEBUG</code> to see more verbose logging</li> <li>Pre-commit hooks will automatically run linting and tests</li> <li>Always test your changes locally before submitting a PR</li> </ul>"},{"location":"contributing/#release-process","title":"Release Process","text":"<ol> <li>Update Default Version</li> </ol> <p>Before creating a release, update the default version in <code>internal/embedded/binaries.go</code>:</p> <pre><code># Example: For releasing v1.2.3\nsed -i '' 's/defaultVersion *= *\".*\"/defaultVersion = \"v1.2.3\"/' internal/embedded/binaries.go\ngit add internal/embedded/binaries.go\ngit commit -m \"chore: update default version to v1.2.3\"\ngit push\n</code></pre> <ol> <li>Create a Release</li> </ol> <p>Once changes are merged to main, a maintainer can create a new release:</p> <ul> <li>Go to GitHub Releases: https://github.com/rocketship-ai/rocketship/releases</li> <li>Click \"Draft a new release\"</li> <li>Create a new tag (e.g., <code>v1.2.3</code>) following semantic versioning</li> <li>Write release notes</li> <li>Publish release</li> </ul> <p>This will automatically:</p> <ul> <li>Create and push a Git tag</li> <li>Trigger the release workflow</li> <li>Build platform-specific binaries</li> <li> <p>Attach binaries to the release</p> </li> <li> <p>Test Installation</p> </li> </ul> <pre><code># Install released version\ngo install github.com/rocketship-ai/rocketship/cmd/rocketship@v1.2.3\n\n# Test basic functionality\nrocketship version\n</code></pre>"},{"location":"contributing/#release-artifacts","title":"Release Artifacts","text":"<p>Each release includes platform-specific binaries for:</p> <ul> <li>CLI (rocketship)</li> <li>Worker</li> <li>Engine</li> </ul> <p>Supported platforms:</p> <ul> <li>Linux (amd64, arm64)</li> <li>macOS (amd64, arm64)</li> <li>Windows (amd64)</li> </ul>"},{"location":"contributing/#getting-help","title":"Getting Help","text":"<ul> <li>Open an issue on GitHub</li> <li>Reach out to me on X or LinkedIn</li> </ul>"},{"location":"contributing/#license","title":"License","text":"<p>By contributing to Rocketship, you agree that your contributions will be licensed under the MIT License.</p>"},{"location":"examples/","title":"Examples","text":"<p>Rocketship comes with example test suites that demonstrate different features and use cases. Each example includes detailed explanations and ready-to-use test specifications.</p>"},{"location":"examples/#available-examples","title":"Available Examples","text":""},{"location":"examples/#http-testing","title":"HTTP Testing","text":"<ul> <li>Request Chaining &amp; Delays - Learn how to chain HTTP requests, handle responses, and use delays in your test suites</li> </ul>"},{"location":"examples/#running-the-examples","title":"Running the Examples","text":"<p>To run any example, first start the test server (included in the repository):</p> <pre><code># Start the test server\ngo run for-contributors/test-server/main.go\n</code></pre> <p>Then in another terminal, run the example:</p> <pre><code># Run the example test suite\nrocketship run -af examples/request-chaining/rocketship.yaml\n</code></pre> <p>The test server provides a simple HTTP API that you can use to experiment with Rocketship's features. It includes:</p> <ul> <li>Full CRUD operations for any resource type</li> <li>JSON request/response handling</li> <li>Automatic ID generation</li> <li>In-memory storage for the session</li> </ul> <p>You can find the test server's source code in the <code>for-contributors/test-server</code> directory.</p>"},{"location":"installation/","title":"Installation","text":"<p>Rocketship CLI is available for macOS, Linux, and Windows. Choose your platform below for installation instructions.</p>"},{"location":"installation/#prerequisites","title":"Prerequisites","text":"<p>Before installing Rocketship, you need to install Temporal, which is required for the local engine:</p> <pre><code>brew install temporal  # macOS\n</code></pre> <p>For other platforms, please follow the Temporal installation guide.</p>"},{"location":"installation/#macos","title":"macOS","text":""},{"location":"installation/#apple-silicon","title":"Apple Silicon","text":"<pre><code>curl -Lo /usr/local/bin/rocketship https://github.com/rocketship-ai/rocketship/releases/latest/download/rocketship-darwin-arm64 &amp;&amp; chmod +x /usr/local/bin/rocketship\n</code></pre>"},{"location":"installation/#intel","title":"Intel","text":"<pre><code>curl -Lo /usr/local/bin/rocketship https://github.com/rocketship-ai/rocketship/releases/latest/download/rocketship-darwin-amd64 &amp;&amp; chmod +x /usr/local/bin/rocketship\n</code></pre>"},{"location":"installation/#linux","title":"Linux","text":""},{"location":"installation/#amd64","title":"AMD64","text":"<pre><code>curl -Lo /usr/local/bin/rocketship https://github.com/rocketship-ai/rocketship/releases/latest/download/rocketship-linux-amd64 &amp;&amp; chmod +x /usr/local/bin/rocketship\n</code></pre>"},{"location":"installation/#arm64","title":"ARM64","text":"<pre><code>curl -Lo /usr/local/bin/rocketship https://github.com/rocketship-ai/rocketship/releases/latest/download/rocketship-linux-arm64 &amp;&amp; chmod +x /usr/local/bin/rocketship\n</code></pre>"},{"location":"installation/#windows","title":"Windows","text":"<ol> <li>Download the latest Windows executable from our releases page</li> <li>Rename it to <code>rocketship.exe</code></li> <li>Move it to a directory in your PATH (e.g., <code>C:\\Windows\\System32\\</code>)</li> </ol>"},{"location":"installation/#docker","title":"Docker","text":"<p>Rocketship is also available as a Docker image. It will run the tests you specify then exit:</p> <pre><code>docker pull rocketshipai/rocketship:latest\n</code></pre> <p>To run Rocketship using Docker:</p> <pre><code>docker run rocketshipai/rocketship:latest\n</code></pre>"},{"location":"installation/#verifying-installation","title":"Verifying Installation","text":"<p>To verify your installation, run:</p> <pre><code>rocketship version\n</code></pre>"},{"location":"installation/#optional-creating-an-alias","title":"Optional: Creating an Alias","text":"<p>If you prefer a shorter command, you can create an alias for the <code>rocketship</code> command. Here's how to do it on different platforms:</p>"},{"location":"installation/#unix-like-systems-macos-linux","title":"Unix-like Systems (macOS, Linux)","text":"<p>Add one of these to your shell's configuration file (<code>.bashrc</code>, <code>.zshrc</code>, etc.):</p> <pre><code># Alias to \"rs\"\nalias rs=\"rocketship\"\n</code></pre>"},{"location":"installation/#windows-powershell","title":"Windows (PowerShell)","text":"<p>Add this to your PowerShell profile:</p> <pre><code>Set-Alias -Name rs -Value rocketship\n</code></pre> <p>Remember to restart your shell or run <code>source ~/.bashrc</code> (or equivalent) to apply the changes.</p>"},{"location":"installation/#next-steps","title":"Next Steps","text":"<ul> <li>Check out our Quick Start Guide to run your first test</li> <li>Learn about test specifications</li> <li>Explore our examples</li> </ul>"},{"location":"quickstart/","title":"Quick Start Guide","text":"<p>Get started with Rocketship in minutes! This guide will help you install Rocketship and run your first test.</p>"},{"location":"quickstart/#installation","title":"Installation","text":"<p>First, install Temporal (required for the local engine):</p> <pre><code>brew install temporal\n</code></pre> <p>Then install Rocketship:</p> <pre><code>curl -Lo /usr/local/bin/rocketship https://github.com/rocketship-ai/rocketship/releases/latest/download/rocketship-darwin-arm64 &amp;&amp; chmod +x /usr/local/bin/rocketship # for arm64 macos\n</code></pre> <p>For detailed installation instructions for other platforms and optional aliases, see the Installation Guide.</p>"},{"location":"quickstart/#your-first-test","title":"Your First Test","text":"<ol> <li>Create a test file:</li> </ol> <pre><code>cat &gt; simple-test.yaml &lt;&lt; 'EOF'\nname: \"Simple Test Suite\"\ndescription: \"A simple test suite!\"\nversion: \"v1.0.0\"\ntests:\n  - name: \"Test 1\"\n    steps:\n      - name: \"Check API status\"\n        plugin: \"http\"\n        config:\n          method: \"GET\"\n          url: \"https://httpbin.org/status/200\"\n        assertions:\n          - type: \"status_code\"\n            expected: 200\nEOF\n</code></pre> <ol> <li>Run the test:</li> </ol> <pre><code>rocketship run -af simple-test.yaml\n</code></pre> <p>The <code>-a</code> flag tells Rocketship to automatically start and stop the local server, and <code>-f</code> specifies the test file to run.</p>"},{"location":"quickstart/#next-steps","title":"Next Steps","text":"<ul> <li>Learn about test specifications</li> <li>Explore the CLI reference</li> <li>Check out example tests</li> </ul>"},{"location":"examples/request-chaining/","title":"Request Chaining &amp; Delays","text":"<p>This example demonstrates how to chain HTTP requests and use delays in your test suites. It uses the test server included in the repository to show real-world API testing scenarios.</p>"},{"location":"examples/request-chaining/#test-specification","title":"Test Specification","text":"<pre><code>name: \"Request Chaining &amp; Delays Example\"\ndescription: \"A test suite demonstrating request chaining and delays with the test server\"\nversion: \"v1.0.0\"\ntests:\n  - name: \"Create and Verify User\"\n    steps:\n      - name: \"Create a new user\"\n        plugin: \"http\"\n        config:\n          method: \"POST\"\n          url: \"http://localhost:8080/users\"\n          headers:\n            Content-Type: \"application/json\"\n          body: |\n            {\n              \"name\": \"John Doe\",\n              \"email\": \"john@example.com\",\n              \"role\": \"admin\"\n            }\n        assertions:\n          - type: \"status_code\"\n            expected: 200\n          - type: \"json_path\"\n            path: \".name\"\n            expected: \"John Doe\"\n        save:\n          - json_path: \".id\"\n            as: \"user_id\"\n\n      - name: \"Wait for system processing\"\n        plugin: \"delay\"\n        config:\n          duration: \"1s\"\n\n      - name: \"Verify user creation\"\n        plugin: \"http\"\n        config:\n          method: \"GET\"\n          url: \"http://localhost:8080/users/{{ user_id }}\"\n        assertions:\n          - type: \"status_code\"\n            expected: 200\n          - type: \"json_path\"\n            path: \".email\"\n            expected: \"john@example.com\"\n\n  - name: \"Update and List Users\"\n    steps:\n      - name: \"Update user information\"\n        plugin: \"http\"\n        config:\n          method: \"PUT\"\n          url: \"http://localhost:8080/users/{{ user_id }}\"\n          headers:\n            Content-Type: \"application/json\"\n          body: |\n            {\n              \"name\": \"John Doe Jr\",\n              \"email\": \"john.jr@example.com\",\n              \"role\": \"user\"\n            }\n        assertions:\n          - type: \"status_code\"\n            expected: 200\n          - type: \"json_path\"\n            path: \".name\"\n            expected: \"John Doe Jr\"\n\n      - name: \"Short delay for consistency\"\n        plugin: \"delay\"\n        config:\n          duration: \"500ms\"\n\n      - name: \"List all users\"\n        plugin: \"http\"\n        config:\n          method: \"GET\"\n          url: \"http://localhost:8080/users\"\n        assertions:\n          - type: \"status_code\"\n            expected: 200\n          - type: \"json_path\"\n            path: \"to_entries | length\"\n            expected: 1\n</code></pre>"},{"location":"examples/request-chaining/#key-features-demonstrated","title":"Key Features Demonstrated","text":"<p>Request Chaining:</p> <ol> <li>Creating a user and saving its ID</li> <li>Using the saved ID in subsequent requests</li> <li>Verifying changes across requests</li> </ol> <p>Delays:</p> <ol> <li>Using delays between operations</li> <li>Different delay durations (1s, 500ms)</li> <li>Strategic placement for system consistency</li> </ol> <p>HTTP Operations:</p> <ol> <li>POST: Creating resources</li> <li>GET: Retrieving resources</li> <li>PUT: Updating resources</li> </ol> <p>Assertions:</p> <ol> <li>Status code validation</li> <li>JSON response validation using JSONPath</li> <li>Response count validation</li> </ol>"},{"location":"examples/request-chaining/#running-the-example","title":"Running the Example","text":"<ol> <li>Start the test server (included in the repository):</li> </ol> <pre><code>go run for-contributors/test-server/main.go\n</code></pre> <ol> <li>Run the test suite:</li> </ol> <pre><code>rocketship run -af examples/request-chaining/rocketship.yaml\n</code></pre>"},{"location":"examples/request-chaining/#understanding-the-flow","title":"Understanding the Flow","text":"<ol> <li> <p>First Test (\"Create and Verify User\"):</p> </li> <li> <p>Creates a new user</p> </li> <li>Waits for 1 second to simulate system processing</li> <li> <p>Verifies the user was created correctly</p> </li> <li> <p>Second Test (\"Update and List Users\"):</p> </li> <li>Updates the user's information</li> <li>Adds a short delay for system consistency</li> <li>Lists all users to verify the update</li> </ol> <p>The delays in this example are for demonstration purposes. In real-world scenarios, you might use delays when:</p> <ul> <li>Waiting for asynchronous operations to complete</li> <li>Ensuring system consistency in distributed systems</li> <li>Rate limiting your API requests</li> <li>Testing timeout scenarios</li> </ul>"},{"location":"examples/simple-http/","title":"Simple HTTP Tests","text":"<p>This example demonstrates basic HTTP endpoint testing with request chaining, variable saving, and assertions. It simulates a user management API workflow.</p>"},{"location":"examples/simple-http/#test-specification","title":"Test Specification","text":"<pre><code>name: \"Request Chaining Test Suite\"\ndescription: \"A test suite demonstrating request chaining with the test server\"\nversion: \"v1.0.0\"\ntests:\n  - name: \"Create and Chain User Operations\"\n    steps:\n      - name: \"Create first user\"\n        plugin: \"http\"\n        config:\n          method: \"POST\"\n          url: \"http://localhost:8080/users\"\n          headers:\n            Content-Type: \"application/json\"\n          body: |\n            {\n              \"name\": \"John Doe\",\n              \"email\": \"john@example.com\",\n              \"role\": \"admin\"\n            }\n        assertions:\n          - type: \"status_code\"\n            expected: 200\n          - type: \"json_path\"\n            path: \".name\"\n            expected: \"John Doe\"\n          - type: \"json_path\"\n            path: \".email\"\n            expected: \"john@example.com\"\n          - type: \"header\"\n            name: \"Content-Type\"\n            expected: \"application/json\"\n        save:\n          - json_path: \".id\"\n            as: \"first_user_id\"\n          - json_path: \".email\"\n            as: \"first_user_email\"\n\n      # ... More steps in the full example ...\n</code></pre>"},{"location":"examples/simple-http/#key-features-demonstrated","title":"Key Features Demonstrated","text":"<ol> <li> <p>HTTP Methods: The example shows various HTTP methods:</p> </li> <li> <p>POST: Creating users</p> </li> <li>GET: Retrieving user information</li> <li>PUT: Updating user data</li> <li> <p>DELETE: Removing users</p> </li> <li> <p>Assertions:</p> </li> <li> <p>Status code validation</p> </li> <li>JSON response validation using JSONPath</li> <li> <p>Header validation</p> </li> <li> <p>Variable Management:</p> </li> <li> <p>Saving response values using <code>save</code></p> </li> <li> <p>Using saved variables in subsequent requests with <code>{{ variable_name }}</code></p> </li> <li> <p>Request Chaining:</p> </li> <li>Creating dependent requests</li> <li>Verifying changes from previous operations</li> </ol>"},{"location":"examples/simple-http/#running-the-example","title":"Running the Example","text":"<ol> <li>Start the test server (included in the repository):</li> </ol> <pre><code>go run for-contributors/test-server/main.go\n</code></pre> <ol> <li>Run the test suite:</li> </ol> <pre><code>rocketship run -af examples/simple-http/rocketship.yaml\n</code></pre>"},{"location":"examples/simple-http/#full-example","title":"Full Example","text":"<p>The complete example includes additional steps for:</p> <ul> <li>Creating multiple users</li> <li>Retrieving user lists</li> <li>Updating user information</li> <li>Deleting users</li> <li>Verifying operations</li> </ul> <p>You can find the full example in the repository.</p>"},{"location":"reference/rocketship/","title":"Overview","text":""},{"location":"reference/rocketship/#rocketship","title":"rocketship","text":"<p>Rocketship CLI</p>"},{"location":"reference/rocketship/#synopsis","title":"Synopsis","text":"<p>Rocketship is a CLI tool for running automated tests.</p>"},{"location":"reference/rocketship/#options","title":"Options","text":"<pre><code>  -h, --help   help for rocketship\n</code></pre>"},{"location":"reference/rocketship/#see-also","title":"SEE ALSO","text":"<ul> <li>rocketship run    - Run rocketship tests</li> <li>rocketship start    - Start rocketship the rocketship server</li> <li>rocketship stop  - Stop rocketship the rocketship server</li> <li>rocketship version    - Print the version number of Rocketship</li> </ul>"},{"location":"reference/rocketship/#auto-generated-by-spf13cobra-on-19-may-2025","title":"Auto generated by spf13/cobra on 19-May-2025","text":""},{"location":"reference/rocketship_run/","title":"run","text":""},{"location":"reference/rocketship_run/#rocketship-run","title":"rocketship run","text":"<p>Run rocketship tests</p>"},{"location":"reference/rocketship_run/#synopsis","title":"Synopsis","text":"<p>Run rocketship tests from YAML files. Can run a single file or all tests in a directory.</p> <pre><code>rocketship run [flags]\n</code></pre>"},{"location":"reference/rocketship_run/#options","title":"Options","text":"<pre><code>  -a, --auto            Automatically start and stop the local server for test execution\n  -d, --dir string      Path to directory containing test files (will run all rocketship.yaml files recursively)\n  -e, --engine string   Address of the rocketship engine (default: localhost:7700)\n  -f, --file string     Path to a single test file (default: rocketship.yaml in current directory)\n  -h, --help            help for run\n</code></pre>"},{"location":"reference/rocketship_run/#see-also","title":"SEE ALSO","text":"<ul> <li>rocketship    - Rocketship CLI</li> </ul>"},{"location":"reference/rocketship_run/#auto-generated-by-spf13cobra-on-19-may-2025","title":"Auto generated by spf13/cobra on 19-May-2025","text":""},{"location":"reference/rocketship_start/","title":"Overview","text":""},{"location":"reference/rocketship_start/#rocketship-start","title":"rocketship start","text":"<p>Start rocketship the rocketship server</p>"},{"location":"reference/rocketship_start/#synopsis","title":"Synopsis","text":"<p>Start rocketship components like the server.</p>"},{"location":"reference/rocketship_start/#options","title":"Options","text":"<pre><code>  -h, --help   help for start\n</code></pre>"},{"location":"reference/rocketship_start/#see-also","title":"SEE ALSO","text":"<ul> <li>rocketship    - Rocketship CLI</li> <li>rocketship start server  - Start the rocketship server</li> </ul>"},{"location":"reference/rocketship_start/#auto-generated-by-spf13cobra-on-19-may-2025","title":"Auto generated by spf13/cobra on 19-May-2025","text":""},{"location":"reference/rocketship_start_server/","title":"start server","text":""},{"location":"reference/rocketship_start_server/#rocketship-start-server","title":"rocketship start server","text":"<p>Start the rocketship server</p>"},{"location":"reference/rocketship_start_server/#synopsis","title":"Synopsis","text":"<p>Start the rocketship server either locally or connect to a remote instance.</p> <pre><code>rocketship start server [flags]\n</code></pre>"},{"location":"reference/rocketship_start_server/#options","title":"Options","text":"<pre><code>  -b, --background   Start server in background mode\n  -h, --help         help for server\n  -l, --local        Start a local rocketship server\n</code></pre>"},{"location":"reference/rocketship_start_server/#see-also","title":"SEE ALSO","text":"<ul> <li>rocketship start    - Start rocketship the rocketship server</li> </ul>"},{"location":"reference/rocketship_start_server/#auto-generated-by-spf13cobra-on-19-may-2025","title":"Auto generated by spf13/cobra on 19-May-2025","text":""},{"location":"reference/rocketship_stop/","title":"Overview","text":""},{"location":"reference/rocketship_stop/#rocketship-stop","title":"rocketship stop","text":"<p>Stop rocketship the rocketship server</p>"},{"location":"reference/rocketship_stop/#synopsis","title":"Synopsis","text":"<p>Stop rocketship components like the server.</p>"},{"location":"reference/rocketship_stop/#options","title":"Options","text":"<pre><code>  -h, --help   help for stop\n</code></pre>"},{"location":"reference/rocketship_stop/#see-also","title":"SEE ALSO","text":"<ul> <li>rocketship    - Rocketship CLI</li> <li>rocketship stop server    - Stop the rocketship server</li> </ul>"},{"location":"reference/rocketship_stop/#auto-generated-by-spf13cobra-on-19-may-2025","title":"Auto generated by spf13/cobra on 19-May-2025","text":""},{"location":"reference/rocketship_stop_server/","title":"stop server","text":""},{"location":"reference/rocketship_stop_server/#rocketship-stop-server","title":"rocketship stop server","text":"<p>Stop the rocketship server</p>"},{"location":"reference/rocketship_stop_server/#synopsis","title":"Synopsis","text":"<p>Stop the rocketship server and all its components.</p> <pre><code>rocketship stop server [flags]\n</code></pre>"},{"location":"reference/rocketship_stop_server/#options","title":"Options","text":"<pre><code>  -h, --help   help for server\n</code></pre>"},{"location":"reference/rocketship_stop_server/#see-also","title":"SEE ALSO","text":"<ul> <li>rocketship stop  - Stop rocketship the rocketship server</li> </ul>"},{"location":"reference/rocketship_stop_server/#auto-generated-by-spf13cobra-on-19-may-2025","title":"Auto generated by spf13/cobra on 19-May-2025","text":""},{"location":"reference/rocketship_version/","title":"version","text":""},{"location":"reference/rocketship_version/#rocketship-version","title":"rocketship version","text":"<p>Print the version number of Rocketship</p>"},{"location":"reference/rocketship_version/#synopsis","title":"Synopsis","text":"<p>Print the version number of Rocketship CLI.</p> <pre><code>rocketship version [flags]\n</code></pre>"},{"location":"reference/rocketship_version/#options","title":"Options","text":"<pre><code>  -h, --help   help for version\n</code></pre>"},{"location":"reference/rocketship_version/#see-also","title":"SEE ALSO","text":"<ul> <li>rocketship    - Rocketship CLI</li> </ul>"},{"location":"reference/rocketship_version/#auto-generated-by-spf13cobra-on-19-may-2025","title":"Auto generated by spf13/cobra on 19-May-2025","text":""}]}