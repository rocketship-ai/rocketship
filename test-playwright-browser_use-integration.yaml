name: "Playwright + browser_use Integration Test"
description: "Test persistent session sharing between playwright (deterministic) and browser_use (agentic)"

tests:
  - name: "Interweave deterministic and agentic browser automation"
    cleanup:
      always:
        - name: "cleanup browser session"
          plugin: playwright
          config:
            role: stop
            session_id: "integration-{{ .run.id }}"
    steps:
      - name: "start browser session"
        plugin: playwright
        config:
          role: start
          session_id: "integration-{{ .run.id }}"
          headless: false # Visible for testing

      - name: "deterministic navigation to example.com"
        plugin: playwright
        config:
          role: script
          session_id: "integration-{{ .run.id }}"
          language: python
          script: |
            import time
            print("üéØ Playwright: Navigating to example.com...")
            page.goto("https://example.com")
            title = page.title()
            print(f"‚úÖ Playwright: Page title: {title}")

            # Verify we're on example.com
            heading = page.locator("h1").text_content()
            print(f"üìù Playwright: Found heading: {heading}")

            time.sleep(2)  # Visual pause
            result = {"title": title, "heading": heading}

      - name: "agentic navigation with browser_use"
        plugin: browser_use
        config:
          session_id: "integration-{{ .run.id }}"
          task: "Navigate to the iana.org and click the 'Learn more.' link"
          max_steps: 5
          use_vision: true
          llm:
            provider: "openai"
            model: "gpt-4o"
            config:
              OPENAI_API_KEY: "{{ .env.OPENAI_API_KEY }}"

      - name: "verify navigation with playwright"
        plugin: playwright
        config:
          role: script
          session_id: "integration-{{ .run.id }}"
          language: python
          script: |
            import time
            print("üîç Playwright: Verifying final page...")
            current_url = page.url
            print(f"üìç Playwright: Current URL: {current_url}")

            # ASSERT we're on the specific IANA about page
            if "https://www.iana.org/aboutme" not in current_url:
                raise AssertionError(f"Expected to be on https://www.iana.org/aboutme but got: {current_url}")

            print("‚úÖ Playwright: Successfully navigated to IANA About page!")
            result = {"current_url": current_url}

      - name: "agentic youtube search with browser_use"
        plugin: browser_use
        config:
          session_id: "integration-{{ .run.id }}"
          task: "Go to youtube.com and search for Mr Beast in the search bar"
          max_steps: 10
          use_vision: true
          llm:
            provider: "openai"
            model: "gpt-4o"
            config:
              OPENAI_API_KEY: "{{ .env.OPENAI_API_KEY }}"
