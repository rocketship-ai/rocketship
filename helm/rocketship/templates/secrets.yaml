# OIDC configuration secret
{{- if not .Values.auth.oidc.existingSecret }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "rocketship.fullname" . }}-oidc
  labels:
    {{- include "rocketship.labels" . | nindent 4 }}
type: Opaque
data:
  issuer: {{ .Values.auth.oidc.issuer | b64enc }}
  {{ .Values.auth.oidc.secretKeys.clientId }}: {{ .Values.auth.oidc.clientId | b64enc }}
  {{ .Values.auth.oidc.secretKeys.clientSecret }}: {{ .Values.auth.oidc.clientSecret | default "" | b64enc }}
---
{{- end }}

# Auth database password secret
{{- if not .Values.auth.database.existingSecret }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "rocketship.fullname" . }}-auth-db
  labels:
    {{- include "rocketship.labels" . | nindent 4 }}
type: Opaque
data:
  {{ .Values.auth.database.secretKeys.password }}: {{ .Values.auth.database.password | b64enc }}
---
{{- end }}

# TLS certificate secret
{{- if and .Values.tls.enabled (not .Values.tls.certificate.existingSecret) }}
{{- if and .Values.tls.certificate.cert .Values.tls.certificate.key }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "rocketship.fullname" . }}-tls
  labels:
    {{- include "rocketship.labels" . | nindent 4 }}
type: kubernetes.io/tls
data:
  tls.crt: {{ .Values.tls.certificate.cert | b64enc }}
  tls.key: {{ .Values.tls.certificate.key | b64enc }}
---
{{- else if .Values.tls.certificate.selfSigned }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "rocketship.fullname" . }}-tls
  labels:
    {{- include "rocketship.labels" . | nindent 4 }}
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
type: kubernetes.io/tls
data:
  # Self-signed certificate will be generated by init container or cert-manager
  tls.crt: ""
  tls.key: ""
---
{{- end }}
{{- end }}