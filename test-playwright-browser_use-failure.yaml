name: "Playwright + browser_use - Intentional Failure Test"
description: "Test browser_use failure formatting when agent cannot complete an impossible task"

tests:
  - name: "Browser use fails to find non-existent content"
    cleanup:
      always:
        - name: "cleanup browser session"
          plugin: playwright
          config:
            role: stop
            session_id: "browser-fail-{{ .run.id }}"
    steps:
      - name: "start browser session"
        plugin: playwright
        config:
          role: start
          session_id: "browser-fail-{{ .run.id }}"
          headless: false # Visible so we can watch it try

      - name: "navigate to YouTube homepage"
        plugin: playwright
        config:
          role: script
          session_id: "browser-fail-{{ .run.id }}"
          language: python
          script: |
            from playwright.sync_api import expect

            print("üéØ Navigating to YouTube...")
            page.goto("https://www.youtube.com")

            # Wait for page to load
            expect(page).to_have_url("https://www.youtube.com/")
            print("‚úÖ YouTube homepage loaded")

            result = {"status": "ready", "url": page.url}

      - name: "browser_use attempts impossible task"
        plugin: browser_use
        config:
          session_id: "browser-fail-{{ .run.id }}"
          task: |
            Navigate to https://example.com, then scroll down exactly 50 times,
            then find the blue button with the text "Submit Rocketship Test Form XYZ",
            click it, and verify you are on a success page. You must complete all steps.
          max_steps: 3  # Too few steps to complete the task
          use_vision: true
          llm:
            provider: "openai"
            model: "gpt-4o"
            config:
              OPENAI_API_KEY: "{{ .env.OPENAI_API_KEY }}"

      - name: "verify final state with playwright"
        plugin: playwright
        config:
          role: script
          session_id: "browser-fail-{{ .run.id }}"
          language: python
          script: |
            print("üîç Checking final browser state...")
            print(f"üìç Final URL: {page.url}")

            # This step will only run if browser_use somehow succeeded (it won't)
            result = {"final_url": page.url, "note": "This should not be reached"}
