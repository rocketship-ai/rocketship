name: "Browser Plugin Integration Tests"
description: "Test browser plugin fixes: max_steps, success/failure detection, and proper configuration"

tests:
  - name: "Test max_steps limitation"
    steps:
      - name: "Complex task with max_steps=1"
        plugin: browser
        config:
          task: |
            This task requires multiple steps but max_steps=1 should limit it:
            1. Navigate to https://example.com
            2. Click "More information" link
            3. Navigate to another page
            Since max_steps=1, this should fail to complete all steps.
          llm:
            provider: "openai"
            model: "gpt-4o"
            config:
              OPENAI_API_KEY: "{{ .env.OPENAI_API_KEY }}"
          headless: true
          timeout: "30s"
          max_steps: 1
          use_vision: false
        save:
          - json_path: ".success"
            as: "max_steps_success"
          - json_path: ".result"
            as: "max_steps_result"
        # Expect failure due to max_steps limit
        assertions:
          - type: "json_path"
            path: ".success"
            expected: false

      - name: "Log max_steps test results"
        plugin: log
        config:
          message: |
            Browser Plugin Max Steps Test Results:
            - Max steps test success (should be false): {{ max_steps_success }}
            - Max steps result: {{ max_steps_result }}

  - name: "Test browser plugin configuration and error handling"
    steps:
      - name: "Test browser plugin with invalid API key (should fail gracefully)"
        plugin: browser
        config:
          task: "Navigate to https://example.com and confirm the page loaded successfully"
          llm:
            provider: "openai"
            model: "gpt-4o"
            config:
              OPENAI_API_KEY: "invalid-key-for-testing"
          headless: true
          timeout: "10s"
          max_steps: 2
          use_vision: false
        save:
          - json_path: ".success"
            as: "browser_test_success"
          - json_path: ".result"
            as: "browser_test_result"
        # Expect failure due to invalid API key - this tests that assertion validation works
        assertions:
          - type: "json_path"
            path: ".success"
            expected: false

      - name: "Log browser test results"
        plugin: log
        config:
          message: |
            Browser Plugin Error Handling Test Results:
            - Browser test success (expected false): {{ browser_test_success }}
            - Browser test result: {{ browser_test_result }}
