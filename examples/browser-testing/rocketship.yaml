name: "Browser Plugin Integration Tests"
description: "Test browser plugin fixes: max_steps, success/failure detection, and proper configuration"

tests:
  - name: "Test max_steps limitation"
    steps:
      - name: "Complex task with max_steps=1"
        plugin: browser
        config:
          task: |
            This task requires multiple steps but max_steps=1 should limit it:
            1. Navigate to https://example.com
            2. Click "More information" link
            3. Navigate to another page
            Since max_steps=1, this should fail to complete all steps.
          llm:
            provider: "openai"
            model: "gpt-4o"
            config:
              OPENAI_API_KEY: "{{ .env.OPENAI_API_KEY }}"
          headless: true
          timeout: "30s"
          max_steps: 1
          use_vision: false
        save:
          - json_path: ".success"
            as: "max_steps_success"
          - json_path: ".result"
            as: "max_steps_result"
        # Expect failure due to max_steps limit
        assertions:
          - type: "json_path"
            path: ".success"
            expected: false

      - name: "Log max_steps test results"
        plugin: log
        config:
          message: |
            Browser Plugin Max Steps Test Results:
            - Max steps test success (should be false): {{ max_steps_success }}
            - Max steps result: {{ max_steps_result }}

  - name: "Test browser automation with timeout failure"
    steps:
      - name: "Impossible task that will timeout"
        plugin: browser
        config:
          task: "Find a non-existent element with ID 'impossible-element-that-does-not-exist-anywhere' on https://example.com"
          llm:
            provider: "openai"
            model: "gpt-4o"
            config:
              OPENAI_API_KEY: "{{ .env.OPENAI_API_KEY }}"
          headless: true
          timeout: "10s"
          max_steps: 3
          use_vision: false
        save:
          - json_path: ".success"
            as: "navigation_success"
          - json_path: ".result"
            as: "navigation_result"
        # Expect failure for impossible task
        assertions:
          - type: "json_path"
            path: ".success"
            expected: false

      - name: "Log timeout test results"
        plugin: log
        config:
          message: |
            Browser Plugin Timeout Test Results:
            - Impossible task test success (should be false): {{ navigation_success }}
            - Timeout test result: {{ navigation_result }}
